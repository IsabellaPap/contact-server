import {
  Entity,
  Column,
  PrimaryGeneratedColumn,
  CreateDateColumn,
  ManyToOne,
} from 'typeorm';
import { Organization } from './organization.entity';
import { ApiProperty } from '@nestjs/swagger';
import { ContactDTO } from 'src/models/contact.dto';

@Entity()
export class Contact implements ContactDTO {
  @ApiProperty({
    description:
      'UUID string. Generated by the API when creating. Immutable for the lifetime of the card.',
    required: false,
  })
  @PrimaryGeneratedColumn('uuid')
  id!: string;

  @ApiProperty({
    description: 'First mame. ',
    required: false,
  })
  @Column({ name: 'firstname', length: 30 })
  firstName: string = '';

  @ApiProperty({
    description: 'Last mame. ',
    required: false,
  })
  @Column({ name: 'lastname', length: 30 })
  lastName: string = '';

  @ApiProperty({
    description: 'Email. Must be unique to the Contact',
    required: true,
  })
  @Column({ name: 'email', unique: true, nullable: false }) //nullable flag is useless here?
  email: string = '';

  @ApiProperty({
    description: 'Organization.',
    required: false,
  })
  @ManyToOne(() => Organization, (organization) => organization.contacts)
  organization!: Organization;

  @ApiProperty({
    description:
      'Self-generated timestamp of record creation. Any value submitted by the apps is ignored.',
    required: false,
  })
  @CreateDateColumn({
    name: 'createdon',
    type: 'timestamptz',
    default: () => 'CURRENT_TIMESTAMP',
  })
  createdOn!: Date;
}
