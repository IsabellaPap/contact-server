import { Entity, Column, PrimaryGeneratedColumn, ManyToOne } from 'typeorm';
import { Organization } from './organization.entity';
import { UserDTO } from 'src/contact-server/models/user.dto';
import { ApiProperty } from '@nestjs/swagger';

@Entity('user')
export class User implements UserDTO {
  @ApiProperty({
    description:
      'UUID string. Generated by the API when creating. Immutable for the lifetime of the card.',
    required: false,
  })
  @PrimaryGeneratedColumn('uuid')
  id!: string;

  @ApiProperty({
    description: 'Username. Must be unique to the User',
    required: true,
  })
  @Column({ name: 'name', unique: true, nullable: false, length: 20 })
  name: string = '';

  @ApiProperty({
    description:
      "User's password. Must be supplied in clear text on creation. Optional on other updates.",
    required: false,
  })
  @Column({ name: 'passhash', nullable: true })
  credential?: string;

  @ApiProperty({
    description: 'Organization.',
    required: true,
  })
  @ManyToOne(() => Organization, (organization) => organization.users)
  @ApiProperty({ type: () => Organization })
  organization!: Organization;

  @ApiProperty({
    description: 'Last login timestamp.',
    required: false,
  })
  @Column({ name: 'lastlogin', nullable: true })
  lastLogin?: Date;
}
